#include <stdio.h>
#include <stdlib.h>

// Define a structure to represent a student
struct Student {
    char name[50];
    int rollNumber;
    float marks;
};

// Comparator function to sort the array by marks in descending order
int compareMarks(const void *a, const void *b) {
    struct Student *studentA = (struct Student *)a;
    struct Student *studentB = (struct Student *)b;

    if (studentA->marks < studentB->marks) {
        return 1;  // Return positive if studentA's marks are less than studentB's
    } else if (studentA->marks > studentB->marks) {
        return -1; // Return negative if studentA's marks are greater than studentB's
    } else {
        return 0;  // Return 0 if marks are equal
    }
}

int main() {
    int n;

    // Input the number of students
    printf("Enter the number of students: ");
    scanf("%d", &n);

    // Declare an array of students
    struct Student students[n];

    // Input student details
    for (int i = 0; i < n; i++) {
        printf("\nEnter details of student %d:\n", i + 1);
        printf("Name: ");
        getchar();  // To consume the leftover newline character from the previous input
        fgets(students[i].name, sizeof(students[i].name), stdin);  // Read name with spaces
        students[i].name[strcspn(students[i].name, "\n")] = 0;  // Remove the newline character
        printf("Roll Number: ");
        scanf("%d", &students[i].rollNumber);
        printf("Marks: ");
        scanf("%f", &students[i].marks);
    }

    // Sort the array of students based on marks using qsort
    qsort(students, n, sizeof(struct Student), compareMarks);

    // Output sorted student details
    printf("\nSorted list of students based on marks (Descending order):\n");
    for (int i = 0; i < n; i++) {
        printf("\nStudent %d:\n", i + 1);
        printf("Name: %s\n", students[i].name);
        printf("Roll Number: %d\n", students[i].rollNumber);
        printf("Marks: %.2f\n", students[i].marks);
    }

    return 0;
}
